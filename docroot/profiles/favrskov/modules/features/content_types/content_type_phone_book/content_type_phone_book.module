<?php
/**
 * @file
 * Code for the Content Type Phone Book feature.
 */

include_once 'content_type_phone_book.features.inc';

/**
 * Implements hook_field_formatter_info().
 *
 * Registers telephone number formatter for text fields,
 * and date formatter for date in phonebook.
 */
function content_type_phone_book_field_formatter_info() {
  return array(
    'telephone_formatter' => array(
      'label' => t('Telephone'),
      'field types' => array('text'),
    ),
    'phone_book_oh' => array(
      'label' => t('Opening hours'),
      'description' => t('Renders opening hours field collection'),
      'field types' => array('field_collection'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 *
 * Contains render function for telephone number formatter,
 * and phone book date formatter.
 */
function content_type_phone_book_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  switch ($display['type']) {
    case 'telephone_formatter':
      $element = array();
      foreach ($items as $delta => $item) {
        $value = $item['value'];
        if (strlen($item['value']) >= 3) {
          // Split telephone number into smaller chunks
          $value = substr(chunk_split($value, 2, ' '), 0, -1);
        }
        $element[$delta]['#markup'] = "<span>" . $value . "</span>";
      }
      return $element;

    case 'phone_book_oh':
      $opening_hours_info = content_type_phone_book_get_opening_hours_info($items);
      $field_definition = field_info_field('field_day_of_week');
      $allowed_values = list_allowed_values($field_definition);
      $result = '';

      foreach ($opening_hours_info as $key => $value) {
        $result .= '<div class="opening-hours-item">' .
          '<span class="opening-hours-day">' . $allowed_values[$key] . '</span>' .
          '<span class="opening-hours-time">' . $value . '</span></div>';
      }
      return array(0 => array('#markup' => $result));

    default:
      break;
  }
}


/**
 * Returns info about opening hours as array.
 *
 * @param array $items
 *   FieldCollection items.
 *
 * @return array
 *   Array with info about opening hours.
 */
function content_type_phone_book_get_opening_hours_info($items) {
  $opening_hours_info = array();
  foreach ($items as $delta => $item) {
    if ($field_collection = field_collection_field_get_entity($item)) {
      if (property_exists($field_collection, 'field_day_of_week')
        && property_exists($field_collection, 'field_time')
      ) {
        $day_of_week = field_get_items('field_collection_item', $field_collection, 'field_day_of_week');
        $time = field_get_items('field_collection_item', $field_collection, 'field_time');
        $opening_hours_info[$day_of_week[0]['value']] = $time[0]['value'];
      }
    }
  }
  ksort($opening_hours_info);
  return $opening_hours_info;
}


/**
 * Implements hook_node_validate().
 *
 * Adds custom validation for telephone fields.
 */
function content_type_phone_book_node_validate($node, $form, &$form_state) {
  if ($node->type === 'phone_book') {
    content_type_phone_book_check_telephone_number($node, 'field_phone_book_phone', t('Phone number'));
    content_type_phone_book_check_telephone_number($node, 'field_phone_book_cell_phone', t('Cell phone'));
  }
}

/**
 * Validation callback for telephone numbers.
 *
 * @param object $node
 *   Node to be validated.
 * @param string $field_name
 *   Machine name of the field in node.
 * @param string $human_name
 *   Human name of the field in node.
 */
function content_type_phone_book_check_telephone_number($node, $field_name, $human_name) {
  $telephone = field_get_items('node', $node, $field_name);
  $telephone = $telephone[0]['value'];

  if (!preg_match('/^[0-9]{0,8}$/', $telephone)) {
    form_set_error($field_name, t("The field '@name' must be numeric and have maximum length 8.",
      array('@name' => $human_name)));
  }
}

/**
 * Implements hook_form_alter().
 *
 * Changing default Address module fields.
 */
function content_type_phone_book_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id === 'phone_book_node_form') {
    $form['field_phone_book_address'][LANGUAGE_NONE][0]['name_block']['first_name']['#title'] = t('Name', array(), array('context' => 'phonebook'));
    $form['field_phone_book_address'][LANGUAGE_NONE][0]['name_block']['last_name']['#access'] = FALSE;
  }
}
