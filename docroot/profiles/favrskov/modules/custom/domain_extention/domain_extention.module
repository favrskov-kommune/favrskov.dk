<?php

/**
 * @file Domain extension module.
 */

/**
 * Default nodes count per page in content table.
 */
define('DOMAIN_EXTENTION_NODES_PER_PAGE', 50);

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Add fields that helps to implement VBO-style content selection feature with
 * domain_content_admin form.
 *
 * @see domain_content_form().
 */
function domain_extention_form_domain_content_admin_alter(&$form, &$form_state, $form_id) {
  // Path to root folder of domain_extention module.
  $path = drupal_get_path('module', 'domain_extention');

  // Get filtered count of nodes that were selected by user before.
  $filtered_count = _domain_extention_get_filtered_count();

  // 0 - Do nothing
  // 1 - Apply to default page nodes count (default = 50 nodes).
  // 2 - Apply to all filtered nodes.
  // @see domain_extention_admin_nodes_validate() for more info.
  $form['select_nodes_on_page_or_all'] = array(
    '#type' => 'hidden',
    '#default_value' => '0',
    '#weight' => 0,
    '#attributes' => array(
      'class' => array('select-nodes-on-page-or-all')
    ),
  );

  $vars = array(
    'selected_nodes_in_page' => t('Selected <strong>@default_nodes_count nodes</strong> in this page.', array('@default_nodes_count' => DOMAIN_EXTENTION_NODES_PER_PAGE)),
    'select_all_nodes_in_table' => t('Select all @filtered_nodes_count nodes in this table.', array('@filtered_nodes_count' => $filtered_count)),
    'selected_nodes_in_table' => t('Selected <strong>@filtered_nodes_count nodes</strong> in this table.', array('@filtered_nodes_count' => $filtered_count)),
    'select_default_amount_nodes_in_page' => t('Select only @default_nodes_count nodes in this page.', array('@default_nodes_count' => DOMAIN_EXTENTION_NODES_PER_PAGE)),
  );
  $select_buttons_markup = theme('select_buttons', $vars);

  $form['#attached']['css'][] =  "$path/css/domain_extention.css";
  $form['#attached']['js'][] = "$path/js/domain_extention.js";
  $form['#attached']['js'][] = array(
    'data' => array(
      'domainExtention' => array(
        'filteredCount' => $filtered_count,
        'selectButtonsMarkup' => $select_buttons_markup,
        'defaultPageNodeCount' => DOMAIN_EXTENTION_NODES_PER_PAGE,
      ),
    ),
    'type' => 'setting',
  );

  $form['admin']['options']['submit']['#validate'][] = 'domain_extention_admin_nodes_validate';
}

/**
 * Validate handler for domain_admin_nodes form. Determine whether to perform
 * mass operation on all nodes or only on part of them.
 */
function domain_extention_admin_nodes_validate($form, &$form_state) {
  switch($form_state['values']['select_nodes_on_page_or_all']){
    case '0': {
      // Do nothing.
      break;
    }
    case '1': {
      // Do nothing.
      break;
    }
    case '2': {
      $query = _domain_extension_filtered_query();
      $nodes = $query->execute()->fetchAllKeyed();

      // Nodes array should satisfy expectations.
      array_walk($nodes, '_domain_extention_get_proper_array');

      // Update nodes info in $form_state['admin']['nodes'] so that will be pass
      // to submit handlers.
      form_set_value($form['admin']['nodes'], $nodes, $form_state);
      break;
    }
    default: {
      // Do Nothing.
    }
  }
}

/**
 * Helper function.
 * Reformat $nodes array to make it further applicable.
 */
function _domain_extention_get_proper_array(&$value, $key) {
  $value = (string) $key;
}

/**
 * Helper function.
 * Retrieve amount of filtered content.
 *
 * Internal function for this module. If filters are empty - return amount of
 * all nodes, otherwise amount of filtered nodes.
 */
function _domain_extention_get_filtered_count() {
  $query = _domain_extension_filtered_query();

  // Finally, get count of filtered nodes.
  $filtered_count = $query
    ->countQuery()
    ->execute()
    ->fetchCol();

  return $filtered_count[0];
}

/**
 * Helper function. Apply filters selected by user to query.
 */
function _domain_extension_filtered_query() {
  $query = db_select('node', 'n');
  $query->fields('n', array('nid'));

  node_build_filter_query($query);

  // We deal with content assigned to particular domain (or 'all' domains)
  // so we should include dependency on domain (or on 'all' domains) in
  // nodes count calculating query.
  // Do it by domain_content_alter_node_query().
  $arg = arg(3);
  // If 'all', only show content assigned to all affiliates.
  if ($arg == 'all') {
    domain_content_alter_node_query($query, TRUE, FALSE);
  }
  else {
    // Restrict the query to the active domain.
    domain_content_alter_node_query($query, FALSE);
  }

  return $query;
}

/**
 * Implements hook_js_alter().
 */
function domain_extention_js_alter(&$javascript) {
  // Restrict usage of tableselect.js on admin/domain/content/* pages to
  // replace it with domain_extention.js.
  if (strpos(current_path(), 'admin/domain/content/') !== FALSE) {
    unset($javascript['misc/tableselect.js']);
  }
}

/**
 * Implements hook_theme().
 */
function domain_extention_theme($existing, $type, $theme, $path) {
  return array(
    'select_buttons' => array(
      'path' => "$path/templates",
      'template' => 'content-select-buttons',
      'arguments' => array(
        'selected_nodes_in_page' => NULL,
        'select_all_nodes_in_table' => NULL,
        'selected_nodes_in_table' => NULL,
        'select_default_amount_nodes_in_page' => NULL,
      ),
    ),
  );
}
