diff --git a/webp.module b/webp.module
index de27098..f3a79a7 100644
--- a/webp.module
+++ b/webp.module
@@ -6,6 +6,9 @@
  */

 use Drupal\Core\Routing\RouteMatchInterface;
+use Drupal\Core\Entity\EntityInterface;
+use Drupal\image\Entity\ImageStyle;
+use Drupal\Core\File\Exception\FileException;

 /**
  * Implements hook_help().
@@ -64,3 +67,38 @@ function webp_preprocess_responsive_image(&$variables) {
     $variables['output_image_tag'] = FALSE;
   }
 }
+
+/**
+ * Implements hook_entity_update().
+ *
+ * Saves the focal point value for the image media entity about to be saved.
+ */
+function webp_entity_update(EntityInterface $entity) {
+  if (!\Drupal::service('module_handler')->moduleExists('crop')) {
+    return;
+  }
+
+  // The crop entity has changed so we want to clear image style cache.
+  if ($entity instanceof \Drupal\crop\Entity\Crop && !empty($entity->get('uri')->value)) {
+    $uri = $entity->get('uri')->value;
+    $file_system = \Drupal::service('file_system');
+
+    // Loop through each image style and check for webp images.
+    $styles = ImageStyle::loadMultiple();
+    foreach ($styles as $style) {
+
+      $derivative_uri = $style->buildUri($uri);
+      $derivative_uri = preg_replace('/\.(png|jpg|jpeg)$/i', '.webp', $derivative_uri);
+
+      \Drupal::logger('webp')->info('Trying to delete ' . $derivative_uri);
+      if (file_exists($derivative_uri)) {
+        try {
+          $file_system->delete($derivative_uri);
+        }
+        catch (FileException $e) {
+          \Drupal::logger('webp')->error('Failed to delete ' . $derivative_uri);
+        }
+      }
+    }
+  }
+}
