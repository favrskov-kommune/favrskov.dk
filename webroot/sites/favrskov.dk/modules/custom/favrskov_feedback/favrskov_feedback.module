<?php

use Drupal\node\Entity\Node;

/**
 * Alter the list of projects to be updated by locale's interface translation.
 *
 * Locale module attempts to update the translation of those modules returned
 * by \Drupal\update\UpdateManager::getProjects(). Using this hook, the data
 * returned by \Drupal\update\UpdateManager::getProjects() can be altered or
 * extended.
 *
 * Modules or distributions that use a dedicated translation server should use
 * this hook to specify the interface translation server pattern, or to add
 * additional custom/non-Drupal.org modules to the list of modules known to
 * locale.
 * - "interface translation server pattern": URL of the .po translation files
 *   used to download the files from. The URL contains tokens which will be
 *   replaced by appropriate values.
 * The following tokens are available for the server pattern:
 * - "%core": Core version. Value example: "8.x".
 * - "%project": Project name. Value examples: "drupal", "media_gallery".
 * - "%version": Project version release. Value examples: "8.1", "8.x-1.0".
 * - "%language": Language code. Value examples: "fr", "pt-pt".
 *
 * @param array $projects
 *   Project data as returned by \Drupal\update\UpdateManager::getProjects().
 *
 * @see locale_translation_project_list()
 * @ingroup interface_translation_properties
 */
function favrskov_feedback_locale_translation_projects_alter(array &$projects) {
  $module_handler = \Drupal::service('module_handler');
  $path = $module_handler->getModule('favrskov_feedback')->getPath();
  $projects['favrskov_feedback']['info']['interface translation server pattern'] = $path . '/translations/%language.po';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function favrskov_feedback_preprocess_node(&$variables) {
  /** @var Node $node */
  $node = $variables['node'];
  if ($node->hasField('field_chatbot_muni') && !$node->get('field_chatbot_muni')->isEmpty() && $variables['view_mode'] == 'full') {
    if (getenv('APP_ENV') == 'prod') {
      $variables['#attached']['library'][] = 'favrskov_feedback/muni';
    } else {
      $variables['#attached']['library'][] = 'favrskov_feedback/muni.test';
    }
    $category = $node->get('field_chatbot_muni')->first()->getValue()['value'];
    if ($category == 'empty') {
      $category = '';
    }
    $variables['#attached']['drupalSettings']['muni']['municipalityCode'] = 710;
    $variables['#attached']['drupalSettings']['muni']['chatbotName'] = 'Muni';
    $variables['#attached']['drupalSettings']['muni']['category'] = $category;
  }
}
