<?php

use Drupal\Core\Url;
use Drupal\file\Entity\File;
use Drupal\node\Entity\Node;

function favrskov_preprocess_block__inline_block__inline_navigation(array &$variables) {

  /** @var \Drupal\block_content\Entity\BlockContent $block */
  $block = $variables['elements']['content']['#block_content'];
  $view_builder = \Drupal::entityTypeManager()->getViewBuilder('node');
  $block_view_mode = $block->get('field_variant')->value;
  $rendered_content = [];

  foreach ($variables['content'] as $value) {
    $rendered_content[] = $view_builder->view($value['#node'], $block_view_mode);
  }

  $variables['is_slider'] = $block_view_mode === 'inline_navigation_campaign';
  $variables['content'] = $rendered_content;
}

function favrskov_preprocess_block__inline_block__document_list(array &$variables) {
  /** @var \Drupal\block_content\Entity\BlockContent $block */
  $block = $variables['elements']['content']['#block_content'];
  $links = [];
  if ($block->hasField('field_media_documents') && !$block->get('field_media_documents')->isEmpty()) {
    /** @var \Drupal\media\Entity\Media $item */
    foreach ($block->get('field_media_documents') as $item) {
      $item = $item->entity;
      if (!empty($item)) {
        $links[] = [
          'title' => $item->label(),
          'url' => File::load($item->field_media_document->entity->fid->value)->createFileUrl(FALSE),
        ];
      }
    }
  }
  if ($block->hasField('field_links') && !$block->get('field_links')->isEmpty()) {
    /** @var \Drupal\link\Plugin\Field\FieldType\LinkItem $item */
    foreach ($block->get('field_links') as $item) {
      $data = $item->getValue();
      if (!empty($data)) {
        $links[] = [
          'title' => $data['title'],
          'url' => $data['uri']
        ];
      }
    }
  }

  if (!empty($links)) {
    foreach ($links as $link) {
      $variables['links'][] = [
        'title' => $link['title'],
        'url' => Url::fromUri($link['url'])->toString(),
        'icon' => 'document',
      ];
    }
  }
}

function favrskov_preprocess_block__inline_block__news_list(array &$variables) {
  $variables['#cache']['tags'][] = 'node_list';

  /** @var \Drupal\block_content\Entity\BlockContent $block */
  $block = $variables['elements']['content']['#block_content'];

  $categories = [];
  if ($block->hasField('field_news_category') && !$block->get('field_news_category')->isEmpty()) {
    foreach($block->get('field_news_category')->getValue() as $item) {
      $categories[] = $item['target_id'];
    }
  }

  $query = Drupal::entityQuery('node')
    ->condition('type', 'news')
    ->condition('status', 1)
    ->sort('sticky' , 'desc')
    ->sort('created', 'desc');
  if (!empty($categories)) {
    $query->condition('field_news_categories', $categories, 'IN');
  }
  $nids = $query->execute();
  $nodes = Node::loadMultiple($nids);

  $variables['items'] = Drupal::entityTypeManager()->getViewBuilder('node')->viewMultiple($nodes, 'teaser');
}
